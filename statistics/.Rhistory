setwd("~/Documents/Uni/Statistik/Praktikum")
2+2
x = 3
is.integer(x)
y = as.integer(x)
y
is.integer(y)
is.numeric(x)
is.numeric(z)
x = 1:8
x
X
y = 1:6
seq(1,6,0.1)
rep(y, 3)
rep(y, each=3)
cumsum(y)
y
cumsum(y:)
cumsum(y[1:])
rank(y)
rank(x)
x
c(T, F,F, TRUE, FALSE,T,T)
c("TEST", "STRING")
rank(c("TEST", "STRING"))
help rank
?rank
y[1:]
y[1:2]
z = y > 2
z
x[z]
which(y>2)
y.neu = y[-3]
y.neu
y[1:-1]
y[1:None]
y[1:0]
y[1:...]
y[1:-2]
y
y[-1]
tail(y, -2)
tail(y, -1)
?tail
mat1 = cbin(x,y)
mat1 = cbind(x,y)
x
y = x
mat1 = cbind(x,y)
mat1
mat2 = rbin(x,y)
mat2 = rbind(x,y)
mat2
mat[-1,-1]
mat1[-1,-1]
mat1[-1,-2]
mat1[-1,-3]
mat1[-1]
mat1[1]
mat1[1, 1]
mat1[2]
x = 5:10
x
y = 1:5
mat = cbin(x,y)
mat = cbind(x,y)
x
y
x = 5:9
mat = cbind(x,y)
mat
mat[1]
mat[1,1]
mat[,1]
mat[,2]
mat[,-1]
mat[1]
mat[1,]
mat[3]
?t
mat[1]
mat[2]
mat[9]
mat[11]
mat3 = rep(x, lenght(x))
?len
?length
length(x)
mat3 = rep(x, length(x))
mat3
?reshape
mat4 = reshape(mat3, (length(x),length(x)))
mat4 = reshape(mat3, length(x), length(x))
?reshape2
install.packages("reshape2")
library(reshape2)
?reshape2
??reshape2
mat
mat3
mat3 = array(mat3, dim=(length(x), length(x)))
mat3 = array(mat3, dim=c(length(x), length(x)))
mat
mat3
mat3.inv = solve(mat3)
mat3[4] *= 5
mat3[4] = 5 * mat3[4]
mat3.inv = solve(mat3)
install.packages("MASS")
library(MASS)
data(hills)
help(hills)
hills
summary(hills)
zeit = hills$time
zeit
gummi=data.frame(dehnung=c(46,54,48,50,44,42,52),weite=c(148,182,173,166,109,141,166))
liste = list(TRUE, "Liste", 5:8)
liste
liste[[1]]
liste[1]
liste[3]
liste[4]
ls
ls()
rm(z)
ls()
z
T = FALSE; F = TRUE
c(T,F)
rm(F,T)
hist(hills$dist)
par(mfrow=c(3,1))
plot(hills$climb, hills$time)
plot(time ~ climb, data=hills)
plot(hills$time ~ hills$climb)
par(mfrow(1,1))
par(mfrow=(1,1))
par(mfrow=c(1,1))
plot(time ~ climb)
attach(hills)
plot(time ~ climb)
detach(hills)
title("Streudiagramm")
pairs(hills)
my.f <- function(x) { exp(x)}
my.f(0)
my.f(2)
my.g <- function(x) {(x*x)/2 + x + 1}
curve(my.f, from=-2, to=2, col="blue")
curve(my.g, from=-2, to=2, col="red")
curve(my.f, from=-2, to=2, col="blue", add=True)
curve(my.f, from=-2, to=2, col="blue", add=T)
demo(graphics)
attach(hills)
plot(time ~ dist)
lm.hills = lm(time ~ dist)
lm.hills
abline(lm.hills)
?abline
?lm
names(lm.hills)
summary(lm.hills)
?runif
runif(10, 0, 1)
rnorm(5, mean=2, sd=3)
pnorm(0,0,1)
dnorm(0,0,1)
qnorm(0.5, 0, 1)
?qnorm
dbinom(0:3, 3, 0.5)
?binom
?dbinom
my.c2f <- function(tc) {for (celsius in 25:30) {print(c(celsius, 9/5*celsius+32))}}
my.c2f(52)
my.c2f <- function(tc) {(ct, 9/5*ct+32)}
my.c2f <- function(tc) {print(ct, 9/5*ct+32)}
my.c2f(52)
my.c2f <- function(tc) {print(tc, 9/5*tc+32)}
my.c2f(52)
my.c2f <- function(tc) {print(c(tc, 9/5*tc+32)}
my.c2f <- function(tc) {print(c(tc, 9/5*tc+32))}
my.c2f(52)
my.c2f(180)
sapply(hills, mean)
sapply(hills, sd)
?curve
